<dec f='exim/src/local_scan.h' l='168' type='pid_t child_open(uschar ** , uschar ** , int , int * , int * , BOOL )'/>
<use f='exim/src/expand.c' l='5006' u='c' c='expand_string_internal'/>
<def f='exim/src/child.c' l='455' ll='461' type='pid_t child_open(uschar ** argv, uschar ** envp, int newumask, int * infdptr, int * outfdptr, BOOL make_leader)'/>
<doc f='exim/src/child.c' l='437'>/* This function is a wrapper for child_open_uid() that doesn&apos;t have the uid,
gid and working directory changing arguments. The function is provided so as to
have a clean interface for use from local_scan(), but also saves writing NULL
arguments several calls that would otherwise use child_open_uid().

Arguments:
  argv        the argv for exec in the new process
  envp        the envp for exec in the new process
  newumask    umask to set in the new process
  infdptr     pointer to int into which the fd of the stdin of the new process
                is placed
  outfdptr    pointer to int into which the fd of the stdout/stderr of the new
                process is placed
  make_leader if TRUE, make the new process a process group leader

Returns:      the pid of the created process or -1 if anything has gone wrong
*/</doc>
<use f='exim/src/dns.c' l='73' u='c' c='fakens_search'/>
