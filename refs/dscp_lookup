<dec f='exim/src/functions.h' l='176' type='BOOL dscp_lookup(const uschar * , int , int * , int * , int * )'/>
<use f='exim/src/smtp_out.c' l='235' u='c' c='smtp_sock_connect'/>
<use f='exim/src/smtp_out.c' l='245' u='c' c='smtp_sock_connect'/>
<use f='exim/src/acl.c' l='3070' u='c' c='acl_check_condition'/>
<def f='exim/src/ip.c' l='719' ll='793' type='BOOL dscp_lookup(const uschar * dscp_name, int af, int * level, int * optname, int * dscp_value)'/>
<doc f='exim/src/ip.c' l='700'>/* DSCP values change by protocol family, and so do the options used for
setsockopt(); this utility does all the lookups.  It takes an unexpanded
option string, expands it, strips off affix whitespace, then checks if it&apos;s
a number.  If all of what&apos;s left is a number, then that&apos;s how the option will
be parsed and success/failure is a range check.  If it&apos;s not all a number,
then it must be a supported keyword.

Arguments:
  dscp_name   a string, so far unvalidated
  af          address_family in use
  level       setsockopt level to use
  optname     setsockopt name to use
  dscp_value  value for dscp_name

Returns: TRUE if okay to setsockopt(), else FALSE

*level and *optname may be set even if FALSE is returned
*/</doc>
