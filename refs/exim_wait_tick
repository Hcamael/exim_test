<dec f='exim/src/functions.h' l='188' type='void exim_wait_tick(struct timeval * , int )'/>
<def f='exim/src/exim.c' l='384' ll='427' type='void exim_wait_tick(struct timeval * then_tv, int resolution)'/>
<doc f='exim/src/exim.c' l='364'>/* Exim uses a time + a pid to generate a unique identifier in two places: its
message IDs, and in file names for maildir deliveries. Because some OS now
re-use pids within the same second, sub-second times are now being used.
However, for absolute certainty, we must ensure the clock has ticked before
allowing the relevant process to complete. At the time of implementation of
this code (February 2003), the speed of processors is such that the clock will
invariably have ticked already by the time a process has done its job. This
function prepares for the time when things are faster - and it also copes with
clocks that go backwards.

Arguments:
  then_tv      A timeval which was used to create uniqueness; its usec field
                 has been rounded down to the value of the resolution.
                 We want to be sure the current time is greater than this.
  resolution   The resolution that was used to divide the microseconds
                 (1 for maildir, larger for message ids)

Returns:       nothing
*/</doc>
<use f='exim/src/receive.c' l='3883' u='c' c='receive_msg'/>
