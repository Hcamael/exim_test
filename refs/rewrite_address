<dec f='exim/src/functions.h' l='365' type='uschar * rewrite_address(uschar * , BOOL , BOOL , rewrite_rule * , int )'/>
<use f='exim/src/verify.c' l='1660' u='c' c='verify_address'/>
<use f='exim/src/parse.c' l='1691' u='c' c='parse_forward_list'/>
<use f='exim/src/filter.c' l='1759' u='c' c='interpret_commands'/>
<def f='exim/src/rewrite.c' l='402' ll='415' type='uschar * rewrite_address(uschar * s, BOOL is_recipient, BOOL add_header, rewrite_rule * rewrite_rules, int existflags)'/>
<doc f='exim/src/rewrite.c' l='383'>/* This function is called for envelope addresses, the boolean specifying
whether a recipient or a sender. It must first of all ensure the address is
fully qualified, and then apply any relevant re-writing rules. The add-header
flag causes a header to be added, recording the old address. This is marked
&quot;old&quot;, so that it is never transported anywhere; it exists for local checking
and debugging purposes.

Arguments:
  s              the address to be considered
  is_recipient   TRUE for recipient addresses; FALSE otherwise
  add_header     add &quot;X-rewrote-xxx&quot; header when rewriting; this is
                   set TRUE only for calls from the reception functions
  rewrite_rules  points to chain of rewrite rules
  existflags     bits indicating which headers there are rewrites for
                 (just an optimisation)

Returns:         possibly rewritten address
*/</doc>
<use f='exim/src/receive.c' l='2450' u='c' c='receive_msg'/>
<use f='exim/src/receive.c' l='2732' u='c' c='receive_msg'/>
<use f='exim/src/receive.c' l='2908' u='c' c='receive_msg'/>
